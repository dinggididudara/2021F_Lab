
as12, an absolute assembler for Motorola MCU's, version 1.2h

                        ; FX.asm
                        ;
                        ; Author:               Soomin Lee
                        ; Course:               CST8216 Processor Architecture
                        ; Student Number:       040899389
                        ; Date:                 17-Nov-2021
                        ;
                        ; Purpose:      To illustrate how to solve an equation such as:
                        ;               f(x) = 5x + 3 for x = 0 to 9, using 8-bit Multiplication
                        ;               The calculated x in f(x) values will be placed into the X_Values array
                        ;               The calculated f(x) values will be placed into the Results array
                        ;
000a                    ARRAY_LEN       equ     10              ; Number of values to calculate (10): x = 0 to 9
                                                                ; Need two arrays of length ARRAY_LEN
                                                                ; - one holds x = 0 to 9
                                                                ; - one holds f(x) results
                                                                
                        
1020                            org             $1020              ; org as per assignment instructions
1020                    X_Values
1020                            ds              ARRAY_LEN    	   ; Value of x used in calculation stored here
102a                    End_X_Values
                        
1030                            org             $1030              ; org as per assignment instructions
1030                    Results
1030                            ds              ARRAY_LEN          ; Result of f(x) calculation stored here
103a                    End_Results
                        
                        ; Expected Results
                        
                        ;  $1000-$1009      $100a         $1020         $102a        $1030      $103a
                        ;    LookUp       End_LookUp     X_Values    End_X_Values   Results  End_Results
                        
                        
2000                            org     $2000                   ; program code
2000 cf 10 00                   lds     #$1000                  ; stack
2003 ce 10 20                   ldx     #X_Values               ; pointer x is pointing X_Values array
2006 cd 10 30                   ldy     #Results                ; pointer x is pointing LookUp array
2009 86 00                      ldaa    #$00                    ; load a from zero (storing index of array)
                                
200b e6 e4              Loop    ldab    A,X                     ; load register b at index of LookUp array
200d 69 e4                      clr     A,X                     ; clear index of x
200f 6b 4a                      stab    ARRAY_LEN,Y             ; store b and increment y+offset
2011 6a 70                      staa    1,Y+                    ; store a and increment y
2013 42                         inca                            ; increment a
2014 81 0a                      cmpa    #ARRAY_LEN              ; compare if reach to the end of the array
2016 26 f3                      bne     Loop                    ; go back to loop if not the end
                        
2018 3f                         swi
                                end

Executed: Wed Nov 17 14:40:49 2021
Total cycles: 36, Total bytes: 25
Total errors: 0, Total warnings: 0
